on: push

jobs:
    backup:
        runs-on: ubuntu-latest
        if: github.event_name == 'push'
        steps:
        - uses: actions/checkout@main
        - run: |
              git pull --unshallow
              echo '${{secrets.KEY}}' > key
              chmod 400 key
              git -c core.sshCommand='ssh -i key -o StrictHostKeyChecking=no' push -f git@bitbucket.org:chaowenguo/${GITHUB_REPOSITORY#*/}
    build:
        runs-on: ubuntu-latest
        if: github.event_name == 'dummy'
        steps:
        - uses: actions/checkout@main
        - uses: actions/setup-java@main
          with:
              java-version: 17.x
              distribution: zulu
        - run: |
              token=$(curl https://auth.docker.io/token?service=registry.docker.io\&scope=repository:peer2profit/peer2profit_linux:pull | python -c 'import json,sys,builtins; builtins.print(json.loads(sys.stdin.read()).get("token"))')
              curl -L -H authorization:Bearer\ $token https://registry-1.docker.io/v2/peer2profit/peer2profit_linux/blobs/sha256:749df6688b75ffa648f2b616971204237d612c842e3b4de06b9c01d886c9883f | tar -xz
              cp usr/bin/p2pclient assets
              rm -rf usr var
              keytool -genkey -keystore release.jks -keyalg RSA -keysize 2048 -validity 10000 -storepass 123456 -alias release -dname 'CN=(名字与姓氏), OU=(组织单位名称), O=(组织名称), L=(城市或区域名称), ST=(州或省份名称), C=(单位的两字母国家代码)'
              mkdir res
              $ANDROID_HOME/build-tools/33.0.0/aapt2 compile --dir res -o out.zip
              $ANDROID_HOME/build-tools/33.0.0/aapt2 link out.zip -I $ANDROID_HOME/platforms/android-33/android.jar --manifest AndroidManifest.xml -o out.apk
              #gradle --warning-mode all copyDependencies
              javac -Xlint:deprecation -cp $ANDROID_HOME/platforms/android-33/android.jar com/main/*.java
              java -cp $ANDROID_HOME/build-tools/33.0.0/lib/d8.jar com.android.tools.r8.D8 com/main/*.class --lib $ANDROID_HOME/platforms/android-33/android.jar --release 
              $ANDROID_HOME/build-tools/33.0.0/aapt add out.apk classes.dex assets
              $ANDROID_HOME/build-tools/33.0.0/zipalign 4 out.apk tmp.apk
              mv tmp.apk out.apk
              java -jar $ANDROID_HOME/build-tools/33.0.0/lib/apksigner.jar sign --ks release.jks --ks-pass pass:123456 out.apk
              id=$(curl -H authorization:token\ ${{secrets.GITHUB_TOKEN}} https://api.github.com/repos/$GITHUB_REPOSITORY/releases/latest | python -c 'import json,sys,builtins; builtins.print(json.loads(sys.stdin.read()).get("id"))')
              curl -X DELETE -H authorization:token\ ${{secrets.GITHUB_TOKEN}} https://api.github.com/repos/$GITHUB_REPOSITORY/releases/$id
        - uses: svenstaro/upload-release-action@master
          with:
              file: out.apk
    test:
        runs-on: macos-latest
        if: github.event_name == 'push'
        steps:
        - uses: actions/checkout@main
        - uses: actions/setup-node@main
          with:
              node-version: 18.x
        - run: |
              brew install ffmpeg
              #curl http://cashmagnetapp.com/Content/cashmagnetNew.apk > cashmagnetNew.apk
              curl https://bitbucket.org/chaowenguo/common/raw/main/package.json > package.json
              npm install -g appium 
              npm install webdriverio
              #$ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --list | grep system-images
              appium & 
              echo y | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager system-images\;android-30\;google_apis\;x86_64
              echo no | $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager create avd -f -n android -k system-images\;android-30\;google_apis\;x86_64
              $ANDROID_HOME/emulator/emulator -avd android -no-window -gpu swiftshader_indirect -no-snapshot -noaudio -no-boot-anim &
              $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 10; done'
              node android.js ${{secrets.PASSWORD}}
              
              
              #echo y | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager 'system-images;android-33;google_apis;x86_64'
              #echo no | $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager create avd -f -n android -k 'system-images;android-33;google_apis;x86_64'
              #$ANDROID_HOME/emulator/mksdcard -l sdcard 1024M sdcard.img
              #$ANDROID_HOME/emulator/emulator -avd android -no-window -gpu swiftshader_indirect -no-snapshot -noaudio -no-boot-anim -sdcard sdcard.img &       
              #$ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z `getprop sys.boot_completed` ]]; do sleep 10; done'
              #$ANDROID_HOME/platform-tools/adb root
              #for i in {1..10}
              #do
              #    focus=`$ANDROID_HOME/platform-tools/adb shell dumpsys window 2>/dev/null | grep -i mCurrentFocus`
              #    echo $focus
              #    sleep 20
              #    if [[ $focus == *'Not Responding: com.android.systemui'* ]]
              #    then
              #        $ANDROID_HOME/platform-tools/adb shell 'input keyevent KEYCODE_ENTER;input keyevent KEYCODE_DPAD_DOWN;input keyevent KEYCODE_ENTER'
              #    fi
              #done
              #node android.js
              #$ANDROID_HOME/platform-tools/adb -s emulator-5554 shell screenrecord /sdcard/haha.mp4
              #$ANDROID_HOME/platform-tools/adb -s emulator-5554 install cashmagnetNew.apk
              #$ANDROID_HOME/platform-tools/adb -s emulator-5554 shell am start -n com.orlovst.dots/com.main.MainActivity
              #$ANDROID_HOME/platform-tools/adb -s emulator-5554 pull /sdcard/haha.mp4 haha.mp4
        - uses: actions/upload-artifact@main
          with:
              path: haha.mp4
    clean:
        runs-on: ubuntu-latest
        permissions:
            actions: write
        steps:
        - uses: actions/setup-python@main
          with:
              python-version: 3.x
        - run: |
              pip install aiohttp
              curl https://bitbucket.org/chaowenguo/common/raw/main/clean.py | python - ${{secrets.GITHUB_TOKEN}}
